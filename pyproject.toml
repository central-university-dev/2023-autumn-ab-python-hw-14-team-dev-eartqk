[tool.poetry]
name = "Social network"
version = "0.1.0"
description = "MVP social network"
authors = [
    "Artyom Romanov <artem.romanov.03@bk.ru>",
    "Oleg Artamonov <eartqk@gmail.com>",
]
license = "MIT"

[project.urls]
"Homepage" = "https://github.com/central-university-dev/2023-autumn-ab-python-hw-14-team-dev-eartqk"
"Bug Tracker" = "https://github.com/central-university-dev/2023-autumn-ab-python-hw-14-team-dev-eartqk/issues"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.108.0"
pydantic = "^2.5.3"
pydantic-settings = "^2.1.0"
sqlalchemy = "^2.0.23"
alembic = "^1.13.1"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
minio = "^7.2.1"
python-multipart = "^0.0.6"
uvicorn = "^0.25.0"
psycopg2-binary = "^2.9.9"
passlib = "^1.7.4"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.9"
black = "^23.12.1"
flake8 = "^6.1.0"
pylint = "^3.0.3"
mypy = "^1.8.0"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.2"
sqlalchemy = {extras = ["mypy"], version = "^2.0.23"}
flake8-pyproject = "^1.2.3"
flake8-bandit = "^4.1.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py311"
exclude = [
    ".git", "__pycache__", ".mypy_cache", ".pytest_cache",
    "src/social_network/db/migrations/*",
]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "UP037"  # Remove quotes from type annotation
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.flake8]
max-line-length = 120
exclude = [
    ".git", "__pycache__", ".mypy_cache", ".pytest_cache",
    "src/social_network/db/migrations/*",
]
ignore = ['S101']

[tool.pytest.ini_options]
addopts = "--strict-markers -W error"
junit_family = "xunit2"
testpaths = ["tests"]
xfail_strict = true
filterwarnings = [
    "error",
    "error::DeprecationWarning"
]

[tool.black]
line-length = 120
skip-string-normalization = true
extend-exclude = '''
/(
  migrations
)/
'''

[tool.mypy]
plugins = ["sqlalchemy.ext.mypy.plugin", "pydantic.mypy"]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = ["__pycache__", "tests"]
